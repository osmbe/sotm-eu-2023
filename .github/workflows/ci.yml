# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  nodejs-build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x] # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v3 # https://nextjs.org/docs/advanced-features/ci-build-caching#github-actions
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - run: npm i
      - run: npm run build

  nodejs-eslint:
    name: ESLint
    runs-on: ubuntu-latest
    needs: [nodejs-build]
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies & ESLint SARIF formatter
        run: |
          npm install
          npm install @microsoft/eslint-formatter-sarif@2.1.7
      - name: Run ESLint
        run: npm run lint -- --format @microsoft/eslint-formatter-sarif --output-file eslint-results.sarif
        continue-on-error: true
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true

  nodejs-prettier:
    name: Prettier
    runs-on: ubuntu-latest
    needs: [nodejs-build]
    permissions:
      contents: read
      security-events: write
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install dependencies & ESLint SARIF formatter
        run: |
          npm install
          npm install @microsoft/eslint-formatter-sarif@2.1.7
      - name: Run Prettier
        run: npx prettier --check "**/*.{js,jsx,ts,tsx,json,css,scss,md}"
